version: '3.8'

services:
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
    volumes:
      - nats-data:/data
    command: "--jetstream --store_dir=/data"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  gateway:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "npx prisma migrate deploy --schema libs/common/prisma/schema.prisma && node dist/apps/gateway/main.js"
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      nats:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - app-network

  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "npx prisma migrate deploy --schema libs/common/prisma/schema.prisma && node dist/apps/user-service/main.js"
    env_file:
      - .env
    depends_on:
      nats:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - app-network

  product-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "npx prisma migrate deploy --schema libs/common/prisma/schema.prisma && node dist/apps/product-service/main.js"
    env_file:
      - .env
    depends_on:
      nats:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - app-network

  order-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "npx prisma migrate deploy --schema libs/common/prisma/schema.prisma && node dist/apps/order-service/main.js"
    env_file:
      - .env
    depends_on:
      nats:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - app-network

volumes:
  nats-data:
  postgres-data:

networks:
  app-network:
    driver: bridge